version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: cybersec_db
    environment:
      POSTGRES_USER: cybersec_user
      POSTGRES_PASSWORD: cybersec_password
      POSTGRES_DB: cybersecurity_platform
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cybersec_user -d cybersecurity_platform"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: cybersec_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: .
    container_name: cybersec_backend
    environment:
      DATABASE_URL: postgresql+asyncpg://cybersec_user:cybersec_password@db:5432/cybersecurity_platform
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: your-secret-key-here-change-in-production
      ENVIRONMENT: development
      DEBUG: "true"
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        alembic upgrade head &&
        uvicorn main:app --host 0.0.0.0 --port 8000 --reload
      "

  # Optional: Database management tool
  adminer:
    image: adminer
    container_name: cybersec_adminer
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      ADMINER_DEFAULT_SERVER: db

volumes:
  postgres_data:
  redis_data: