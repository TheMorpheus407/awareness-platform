name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python linting tools
      run: |
        pip install black flake8 mypy
        
    - name: Run Black
      run: |
        black --check backend/
        
    - name: Run Flake8
      run: |
        flake8 backend/ --max-line-length=88 --extend-ignore=E203
        
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Run ESLint
      run: |
        cd frontend
        npm run lint
        
    - name: Check TypeScript
      run: |
        cd frontend
        npm run type-check

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        
    - name: Check Python dependencies
      run: |
        cd backend
        pip install safety
        safety check -r requirements.txt || true

  test-migrations:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: migration_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        
    - name: Test migrations up and down
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/migration_test
      run: |
        cd backend
        # Upgrade to head
        alembic upgrade head
        # Downgrade to base
        alembic downgrade base
        # Upgrade again
        alembic upgrade head