version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: awareness_platform
      POSTGRES_USER: ${DB_USER:-awareness}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-awareness123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U awareness"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${DB_USER:-awareness}:${DB_PASSWORD:-awareness123}@postgres:5432/awareness_platform
      REDIS_URL: redis://default:${REDIS_PASSWORD:-redis123}@redis:6379
      SECRET_KEY: ${SECRET_KEY:-devsecretkey123456789012345678901234567890}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-devjwtsecret123456789012345678901234567890}
      ENVIRONMENT: development
      DEBUG: "true"
      CORS_ORIGINS: "http://localhost:3000,http://localhost:5173"
    volumes:
      - ./backend:/app
      - uploaded_files:/app/uploads
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - backend
    environment:
      VITE_API_URL: http://localhost:8000
      VITE_APP_NAME: Cybersecurity Awareness Platform
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    command: npm run dev -- --host

volumes:
  postgres_data:
  redis_data:
  uploaded_files: