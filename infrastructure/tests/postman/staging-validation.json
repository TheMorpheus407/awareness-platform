{
  "info": {
    "name": "Staging Validation Tests",
    "description": "Comprehensive validation suite for staging deployment",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health Checks",
      "item": [
        {
          "name": "API Health Check",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response time is less than 500ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "",
                  "pm.test('Health status is healthy', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql('healthy');",
                  "    pm.expect(jsonData.database).to.eql('healthy');",
                  "    pm.expect(jsonData.redis).to.eql('healthy');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/health",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "health"]
            }
          }
        },
        {
          "name": "Frontend Health Check",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Contains expected content', function () {",
                  "    pm.expect(pm.response.text()).to.include('<html');",
                  "    pm.expect(pm.response.text()).to.include('Awareness Schulungen');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/",
              "host": ["{{baseUrl}}"],
              "path": [""]
            }
          }
        }
      ]
    },
    {
      "name": "Authentication Flow",
      "item": [
        {
          "name": "User Registration",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Registration successful or user exists', function () {",
                  "    pm.expect([201, 409]).to.include(pm.response.code);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    pm.test('User created with correct data', function () {",
                  "        const jsonData = pm.response.json();",
                  "        pm.expect(jsonData.email).to.eql('staging-test@example.com');",
                  "        pm.expect(jsonData.id).to.be.a('number');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"staging-test@example.com\",\n    \"password\": \"StagingTest123!\",\n    \"first_name\": \"Staging\",\n    \"last_name\": \"Test\",\n    \"company_name\": \"Staging Test Company\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "register"]
            }
          }
        },
        {
          "name": "User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Access token received', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.access_token).to.be.a('string');",
                  "    pm.expect(jsonData.token_type).to.eql('bearer');",
                  "    ",
                  "    // Store token for subsequent requests",
                  "    pm.environment.set('access_token', jsonData.access_token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "username",
                  "value": "staging-test@example.com"
                },
                {
                  "key": "password",
                  "value": "StagingTest123!"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "login"]
            }
          }
        },
        {
          "name": "Get Current User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('User data is correct', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.email).to.eql('staging-test@example.com');",
                  "    pm.expect(jsonData.first_name).to.eql('Staging');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "users", "me"]
            }
          }
        }
      ]
    },
    {
      "name": "Core Functionality",
      "item": [
        {
          "name": "List Courses",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Courses array returned', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.courses).to.be.an('array');",
                  "    pm.expect(jsonData.total).to.be.a('number');",
                  "});",
                  "",
                  "pm.test('Response time is acceptable', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/courses?limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "courses"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Dashboard Stats",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Dashboard stats structure is correct', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('stats');",
                  "    pm.expect(jsonData.stats).to.have.property('total_courses');",
                  "    pm.expect(jsonData.stats).to.have.property('completed_courses');",
                  "    pm.expect(jsonData.stats).to.have.property('total_users');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "dashboard"]
            }
          }
        }
      ]
    },
    {
      "name": "Performance Tests",
      "item": [
        {
          "name": "Concurrent Requests Test",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('All requests successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response time under load', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Simulate concurrent load",
                  "const requests = [];",
                  "for (let i = 0; i < 5; i++) {",
                  "    requests.push(pm.sendRequest({",
                  "        url: pm.variables.get('baseUrl') + '/api/v1/health',",
                  "        method: 'GET'",
                  "    }));",
                  "}",
                  "",
                  "Promise.all(requests).then(responses => {",
                  "    console.log('Concurrent requests completed');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/health",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "health"]
            }
          }
        }
      ]
    },
    {
      "name": "Security Validation",
      "item": [
        {
          "name": "CORS Headers Check",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('CORS headers present', function () {",
                  "    pm.response.to.have.header('Access-Control-Allow-Origin');",
                  "    pm.response.to.have.header('Access-Control-Allow-Methods');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "OPTIONS",
            "header": [
              {
                "key": "Origin",
                "value": "https://staging.bootstrap-awareness.de"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/health",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "health"]
            }
          }
        },
        {
          "name": "Security Headers Check",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Security headers present', function () {",
                  "    pm.response.to.have.header('X-Content-Type-Options', 'nosniff');",
                  "    pm.response.to.have.header('X-Frame-Options', 'DENY');",
                  "    pm.response.to.have.header('X-XSS-Protection', '1; mode=block');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/health",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "health"]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set base URL if not already set",
          "if (!pm.environment.get('baseUrl')) {",
          "    pm.environment.set('baseUrl', 'https://staging.bootstrap-awareness.de');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test for all requests",
          "pm.test('No server errors', function () {",
          "    pm.expect(pm.response.code).to.be.below(500);",
          "});"
        ]
      }
    }
  ]
}